Unity3D支持下面几种模型格式:
.fbx(推荐) .obj(不支持动画等特性，一般只用于静态物体) .max.mb .blend

模型需要使用到Light Mapping烘焙系统时，需要勾选Generate Lightmap UVs选项来开启第二套uv。

骨骼的类型：None：表示没有骨骼，Legacy：表示为老版本动画系统的骨骼，Generic：表示为通用的骨骼，
Humanoid：表示为人形骨骼（设置为人形骨骼可以使用Mecanim专门为人形骨骼开发的各种功能了）。满足人形骨骼的可以配置骨骼

『Animations』Tab 设置：
1.Anim.Compression：Keyframe Reduction 这个是『压缩关键帧』，就是 Unity 会自行重采样动画的关键帧，还有两个选项『Off 和 Optimal』，一个是关闭动画压缩，一个是最优化压缩（应该是压缩效率最高，动画效果失真度可能也较高）
Rotation Error，Position Error 和 Scale Error，这个三个参数默认都是 0.5，越小呢精度就越高也就是说动画的失真度越小。
2.Loop Time：循环动画，Loop Pose 用于控制动画循环播放时，从结束帧切换到起始帧时，动画的动作可以无缝的衔接上，
Cycly Offset 就是用于控制循环的时候起始帧偏移用的
3.Root Transform Rotation：a.Bake Into Pose:打钩,动画播放的过程中，该物体的 Transform 中的 Rotation 值不会因为动画中物体做了任何旋转而发生改变，
而是会保持一个恒定的值，和该动画播放之前的旋转值保持一致;
4.Root Transform Position: 期望有位移的动作控制位移不打钩（Animator的Root Motion要打钩），没位移的动画（如待机）打钩,

(Bake Into Pose:运动信息烘焙到动画的骨骼运动中,该动画播放的过程中修改该烘焙对应的信息无作用，用动作的效果，但transform对应的不会被改变，
		切换到其他动画的时候和该动画播放之前的保持一致)，优先级高于applyRootMotion true
applyRootMotion true:仅仅作用于 GameObject 在 X 和 Z 轴上的位移变换（动作位移作用与物体位移,transform的position被动作改变），不影响 Y 轴上的位移
                False，只能看到动画在原地起跳然后再落地，动画中原本应有的在水平方向的位移就没有了；
**Apply Root Motion的选项，该选项没有勾选时，我们的动画会按照世界坐标来移动，即我们的Animation上的数值会直接设定到目标的position之上，而如果勾选，则是在目标的position之上添加我们的动画设定的数值。
**Bake Into Pose:不勾选表示动画产生的旋转或位移（具体看是哪个选项下面）会应用到播放动画的主体对象上，勾选则表示不会应用到播放动画的主体对象上(固定transform值,效果用动作的)。

每个混合树的动画有一些要注意的地方：
1.动画长度需要一致；
2.动画的起始姿势需要一致；

1.ctrl+6 对象:弹出Animation编辑窗口，提示创建Animator and Animation Clip,点create，在保存目录下创建了与对象同名的Animator文件（.controller）和刚才起名的Animation文件（.anim），同时就会在该对象上添加Animator 组件（无Avatar）。点击红点即可编辑动作
2.点击 .anim 文件 ，可以设置动画是否循环等设置
3.Animator窗口：
a. Layers: 使用“动画层”来管理身体不同部分的复杂状态机。比如：你可以使用下半身（动画）层来管理走动/跑动；使用上半身(动画)层来控制投掷/设计动作。
b.状态机包括状态、状态转移和事件，并且在大的状态机中可以设置一个小的子状态机。
11.Animation State:点击某个状态，设置 Motion 动作（.anim）Speed 速度，Foot IK 脚部动画约束（反向动力学，骨骼子节点带动骨骼父节点），Transitions（从这个状态产生的状态转移） 状态转移到别的状态，

Has Exit Time 就是必须过度的时间，处于这个时间时，是不允许任何对动画的操作的,在动画转换时会等待当前动画播放完毕才会转换到下一个动画，
如果当前动画是循环动画会等待本次播放完毕时转换，所以对于需要立即转换动画的情况时记得要取消勾选。
当我当前的动画播放完毕后就自动转换到箭头所指的下一个状态（没有其他跳转条件），此时必须勾选该选项，
否则动画播放完毕后就会卡在最后一帧，如果是循环动画就会一直循环播放。

Write Defaults：动画播放完毕后是否将状态重置为默认状态

Solo：勾选表示当前过渡为唯一过渡，即当前状态只能过渡到这个项目指向的状态；
Mute：勾选表示使这个动画过渡关闭，即当前状态不能过渡到这个项目指向的状态；

Update Mode：更新模式：Normal表示使用Update进行更新，Animate Physics表示使用FixUpdate进行更新（一般用在和物体有交互的情况下）
                       Unscale Time表示无视timeScale进行更新（一般用在UI动画中）

Trigger：本质上也是一个bool类型的参数，但是其值默认为false，且设置为true后系统会自动将其还原为false；
用法：（Mecanim动画系统学习笔记（六））
AnimatorStateInfo stateInfo = animator.GetCurrentAnimatorStateInfo(0); //0:第一层 当前所处状态（有过度的还是原来的状态）
bool isName = stateInfo.IsName("noAnimator1"); //状态名
bool isTag = stateInfo.IsTag("an1"); //状态tag
bool loop = stateInfo.loop //状态对应.anim 是否loop
float speed= stateInfo.speed //状态对应.anim 动画播放速度
float length = stateInfo.length //状态对应.anim 动画播完所需时间长度  length * speed = 正常动画时间长
stateInfo.normalizedTime //动画进度值（有过度的切换到该状态时normalizedTime并不为0）

//将名称转换为哈希值可以提高索引的速度
private int runState = Animator.StringToHash("Base Layer.Run");
stateInfo.fullPathHash == runState //用该方法判断当前状态

 private int moveSpeed = Animator.StringToHash("moveSpeed");
float speed = Input.GetAxis("Vertical");
_animator.SetFloat(moveSpeed, speed);

State Machine Behavior：
通过Animator的GetBehavior方法获取到指定的State Machine Behaviour的实例

使用过程注意点：
1.Animations:动作模型 model不要导进材质球
2.Based Upon: original: 按资源的数据朝向    body orientation:按上身点的朝向  offset：调整朝向偏移量
3.在地面的时候使用applyRootMotion ，竖直位移不使用更符合物理
4.StateMachineBehaviour 可以挂在layer下,可以监听该层下所有state的开始结束刷新，而挂在state下只能监听该state的开始结束刷新
OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
string name = animator.name.Split('(')[0]; //animator 对应 Transform 名字，即gameobject的name
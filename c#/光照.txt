光照系统，由以下三部分组成：Enlighten(静态全局光照) + Probes(动态全局光照) + Screen Space Reflection
Probes:
1.Light Probes:使动态物体能受静态物体的gi影响，将其烘焙在贴图中,如果没有放置光探头，动态对象就无法接受全局光照的信息，造成动态对象比场景还要暗
2.Reflection Probes:对周围取样并把结果写到方体贴图，可以让周围经过的物体得到环境的反射影像，被贴上这个cubemap(影响效能，少用)
实时的反射探头会对所有可见的物体取样,对效能极为.不利最好用烘焙的，”ReflectionProbe Static”对象才会被反射探头取样

全局光照明:（详解Unity 5 全局光照系统Enlighten问题）
1.预计算全局光照:Precomputed Realtime GI（预计算实时全局光照明），简称：实时GI.也需要预先的Bake过程,但不预计算场景中光线的反射信息，而是预计算场景中静态物体表面所有可能的反射光路，然后在游戏运行时结合灯光的位置、方向等信息实时计算出全局光照的结果。 
预计算GI需要灯光类型是Realtime，Bounce Intensity是指全局光照中的间接光强度，默认值是1，意思就是说一盏Realtime灯光默认是使用预计算GI的，所以看起来你好像只使用了Realtime的灯光，但是真正运行的时候却其实是在使用全局光照系统！（间接光照图）
2.烘焙全局光照:Bake GI,ligtmap烘焙方式 （Static Lightmap）静态光照贴图

构成 ： 可实时更新的lightmap + 可实时更新的光照探头（light probe）+ 可实时更新的cubemap（Reflection probe）
实时全局光只实时计算物体之间的bounce light（物体之间来回反射的光）
实时全局光的实现：静态物体之间的bounce light可以在预先计算阶段搞定（light map）
                  被静态物体(自发光在全局光计算中可以当做光源，自发光的物体必须是静态的,被影响的也必须是静态的，烘焙才有效果)照射到的动态物体，通过实时更新的光照探头搞定
                  被动态物体照射到的物体，还不支持


*总结* Unity 5中灯光有个新属性Bounce Intensity，这个值只要大于0系统就会认为你需要使用预计算GI计算这个灯光，而如果此时Precomputed Realtime GI没有被勾选，而Bake GI勾选了那么Unity会把这个灯光也烘焙到lightmap中去。

（全局光照理解为直接光照与间接光照两部分。直接光照指直接从光源射到物体上的光，而间接光照指从其他物体表面反射而来的光），
Unity的灯源(直接光源, 投射灯, 点光源)都是实时的，实时照明里的光线不会反射（没光线的地方全黑）
全局光照为间接光源（烘培会在场景同级目录创建同名文件夹存放烘培数据）

烘焙光照所产生出来的贴图，是无法在游戏运作的时候变更运算的，因此被定义为静态
一个材质的draw call数在shader只绘制一次的情况下在N个灯光就会变成 N次draw call调用
导入的模型都要在属性窗口中Model的 Generate Lightmap UVs勾选上，这是让lightmap匹配你的UV

只有静态对象(LightMap Static)会被纳入GI预计算，要让预计算启动首先必须最少要有一个静态对象

Unity有两种阴影实现方式：烘培阴影与实时阴影、
烘培阴影：真实过渡，是一种离线计算，它采用光线追踪算法来模拟现实世界中光的物理特性，如反射，折射及衰减，光无法到达的地方皆为阴影；但由于其计算量巨大，所以烘焙系统随之诞生，生成记录光照信息的Lightmap，渲染静态物体，Shadow Mapping渲染动态物体。
实时阴影是一种更加精简的模拟，它忽略掉了光的众多物理特性，利用数学方法人为地去制造阴影

light type
1.Area Light:面积光的光源有形状，是一个矩形区域，有位置，有方向，方向是超矩形的一面，矩形的背面没有光，并且随距离衰减直到没有。
它用于模拟大量的光源和在一起的效果，如街道，但是因为计算复杂，所以只用于烘焙

1.Realtime” 这代表这些灯光仍然会照亮你的场景，Unity的预计算GI系统会处理间接光。
2.Baked” 那么这些灯光将会透过Unity的烘焙GI系统处理直接光源和间接光源，产生出来的光照贴图一旦贴到场景上在执行期间是不能改变的。如果需要实现光照贴图的效果就选择此模式。
3.Mixed” 场景内的静态对象会被烘焙GI拿去做计算，然而，不像”Baked”模式，混合模式的灯光仍会继续运算即时光源到非静态对象上，这对于你想把静态环境烘成光照贴图，但同时又希望同样一盏灯能为会动的角色计算阴影很有帮助。

具体操作（Unity5 新功能解析--GI(全局光)）
1离线烘焙: 将light的Baking设为Baked，标记那些static的物体，在Lighting window中的Baked GI对应的就是烘焙的实时光，所以这是要把Precomputed Reatime GI关闭
2实时
   将light的baking设为realtime，标记那些static的物体，在lighting window中将Baked GI关闭，将Precomputed Realtime GI开启，
   注意默认Precomputed Realtime GI的resolution并不高，如果想得到比较不错的效果，可以将它调高。在运行时就可以看到实时的GI效果
3 烘焙GI加实时的局部光照: 这可能是更加主要的做法，即static的物件采用离线的烘焙GI，而非static的物件使用实时的局部光照，
                          这需要将light调为mixed，然后将lightmap里面开启baked gi，而将realtime gi 关闭。
4 烘焙的GI叠加实时的GI，这种做法基本没什么好处，而且效率也很低，这种组合是将light设为mixed，然后将light setting里面的baked gi和 relatime gi全开启


light 的 RenderMode：
1.important对应的就是像素光，非important就是顶点光，而auto就按照graphic quality里面的设置
2.
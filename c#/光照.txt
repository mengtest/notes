光照系统，由以下三部分组成：Enlighten(静态全局光照) + Probes(动态全局光照) + Screen Space Reflection
Probes:
1.Light Probes:用于提供动态物体的光照信息，将其烘焙在贴图中,如果没有放置光探头，动态对象就无法接受全局光照的信息，造成动态对象比场景还要暗
2.Reflection Probes:对周围取样并把结果写到方体贴图，可以让周围经过的物体得到环境的反射影像(影响效能，少用)
实时的反射探头会对所有可见的物体取样,对效能极为.不利最好用烘焙的，”ReflectionProbe Static”对象才会被反射探头取样

全局光照明:（详解Unity 5 全局光照系统Enlighten问题）
1.预计算全局光照:Precomputed Realtime GI（预计算实时全局光照明），简称：实时GI.也需要预先的Bake过程,但不预计算场景中光线的反射信息，而是预计算场景中静态物体表面所有可能的反射光路，然后在游戏运行时结合灯光的位置、方向等信息实时计算出全局光照的结果。 预计算GI需要灯光类型是Realtime，Bounce Intensity是指全局光照中的间接光强度（全局光照理解为直接光照与间接光照两部分。直接光照指直接从光源射到物体上的光，而间接光照指从其他物体表面反射而来的光），默认值是1，意思就是说一盏Realtime灯光默认是使用预计算GI的，所以看起来你好像只使用了Realtime的灯光，但是真正运行的时候却其实是在使用全局光照系统！（间接光照图）
2.烘焙全局光照:Bake GI,ligtmap烘焙方式 （Static Lightmap）静态光照贴图

*总结* Unity 5中灯光有个新属性Bounce Intensity，这个值只要大于0系统就会认为你需要使用预计算GI计算这个灯光，而如果此时Precomputed Realtime GI没有被勾选，而Bake GI勾选了那么Unity会把这个灯光也烘焙到lightmap中去。

Unity的灯源(直接光源, 投射灯, 点光源)都是实时的，实时照明里的光线不会反射（没光线的地方全黑）
全局光照为间接光源（烘培会在场景同级目录创建同名文件夹存放烘培数据）

烘焙光照所产生出来的贴图，是无法在游戏运作的时候变更运算的，因此被定义为静态
一个材质的draw call数在shader只绘制一次的情况下在N个灯光就会变成 N次draw call调用
导入的模型都要在属性窗口中Model的 Generate Lightmap UVs勾选上，这是让lightmap匹配你的UV

只有静态对象(LightMap Static)会被纳入GI预计算，要让预计算启动首先必须最少要有一个静态对象

Unity有两种阴影实现方式：烘培阴影与实时阴影
烘培阴影：真实过渡，是一种离线计算，它采用光线追踪算法来模拟现实世界中光的物理特性，如反射，折射及衰减，光无法到达的地方皆为阴影；但由于其计算量巨大，所以烘焙系统随之诞生，生成记录光照信息的Lightmap，渲染静态物体，Shadow Mapping渲染动态物体。
实时阴影是一种更加精简的模拟，它忽略掉了光的众多物理特性，利用数学方法人为地去制造阴影
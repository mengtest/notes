总的来说，EventSystem负责管理，BaseInputModule负责输入，BaseRaycaster负责确定目标对象，目标对象负责接收事件并处理，然后一个完整的事件系统就有了。

EventSystem、StandaloneInputModule、TouchInputModule，后面两个组件都继承自BaseInputModule。
BaseInputModule是一个基类模块，负责发送输入事件（点击、拖拽、选中等）到具体对象。EventSystem下的所有输入模块都必须继承自BaseInputModule组件。
StandaloneInputModule和TouchInputModule组件是系统提供的标准输入模块和触摸输入模块
EventSystem组件主要负责处理输入、射线投射以及发送事件。

BaseRaycaster也是一个基类，前面说的输入模块要检测到鼠标事件必须有射线投射组件才能确定目标对象。系统实现的射线投射类组件有PhysicsRaycaster, Physics2DRaycaster, GraphicRaycaster。

   UGUI中的事件系统：
其实射线检测，肯定是从摄像机发起的，那么BaseRaycaster模块也一定和摄像机关系一定不简单。
对于UI模块，在Canvas对象下我们可以看到GraphicRaycaster组件，所以Canvas上的所有UI对象，都可以接受输入模块发出的事件

场景对象中使用事件系统：
摄像机挂上一个射线检测组件。PhysicsRaycaster, Physics2Draycaster这两个组件分别是用于3D和2D的场景。
当然，还需要场景的对象挂了collider射线才检测的到。

可以用UICamera.lastCamera找到谁发出的事件,可用UICamera.lastHit得到谁接受这个事件,以及用UICamera.lastTouchPosition得到触摸或屏幕的位置

输入模块可以检测到的事件：
OnBeginDrag，OnSelect，OnPointerClick……
StandaloneInputModule和TouchInputModule两个组件会检测一些输入操作，以事件的方式（message系统）通知目标对象
只要目标对象(定要有Collider)的mono脚本实现了以上接口，那么输入模块会将检测到的事件通过这些接口通知给目标对象

1自行继承接口实现监听:
public testSrc:Mono,IBeginDragHandler
{
      private EventSystem currEvent;
      public void OnBeginDrag(PointerEventData data)
     {
      }
}
2通过EventTrigger组件监听事件
3）、动态添加EventTrigger组件或者修改组件
button.onClick.AddListener(TestClick);